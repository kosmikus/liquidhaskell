---
version: 2.1

commands:
  setup_project:
    description: "Setup the machine, clone the repo, checkout the submodules."
    steps:
      - run: apt-get update && apt-get install -y z3 git ssh
      - checkout
      - add_ssh_keys
      - run: git submodule sync
      - run: git submodule update --init
  cabal_build_and_test:
    description: "Build the project and run the tests"
    parameters:
      liquid_runner:
        type: string
        default: "--liquid-runner=cabal v2-run liquid -- "
      ghc_options:
        type: string
        default: "--ghc-options=\"+RTS -M2G -RTS\""
    steps:
      - setup_project
      - restore_cache:
          keys:
            - cabal-{{ checksum "liquidhaskell.cabal" }}
      - run:
          name: Dependencies
          command: |
            cabal v2-update
            cabal v2-build -j1 all
      - save_cache:
          key: cabal-{{ checksum "liquidhaskell.cabal" }}
          paths:
            - ~/.cabal/store
            - ./dist-newstyle
      - run:
          name: Setup Test
          command: |
            mkdir -p /tmp/junit/cabal
            # Liquid-check some of the .hs file in include first (but why?) filter out the broken ones.
            find include -type f -name '*.hs' | grep -v Old | grep -v Example | grep -v RTick | xargs cabal v2-run liquid -- --compile-spec
      - run:
          name: Test
          command: |
            cabal v2-test -j1 liquidhaskell:test --flag include --flag devel --test-show-details=streaming --test-option="<< parameters.liquid_runner >>" --test-options="-t 1200s --xml=/tmp/junit/cabal/main-test-results.xml"
            cabal v2-test -j1 liquidhaskell:liquidhaskell-parser --test-show-details=streaming --test-options="--xml=/tmp/junit/cabal/parser-test-results.xml"
      - store_test_results:
          path: /tmp/junit/cabal
      - store_artifacts:
          path: tests/logs/cur

jobs:
  stack:
    docker:
      - image: fpco/stack-build:lts
    steps:
      - setup_project
      - restore_cache:
          keys:
            - stack-{{ checksum "stack.yaml" }}
      - run:
          name: Dependencies
          command: |
            stack setup
            # rm -fr $(stack path --dist-dir) $(stack path --local-install-root)
            stack build liquidhaskell --only-dependencies --test --no-run-tests
      - save_cache:
          key: stack-{{ checksum "stack.yaml" }}
          paths:
            - ~/.stack
            - ./.stack-work
      - run:
          name: Test
          command: |
            stack clean
            mkdir -p /tmp/junit/stack
            stack test -j1 liquidhaskell:test --flag liquidhaskell:include --flag liquidhaskell:devel --test-arguments="-t 1200s --xml=/tmp/junit/stack/main-test-results.xml": #--liquid-opts='--cores=1'":
            stack test -j1 liquidhaskell:liquidhaskell-parser --test-arguments="--xml=/tmp/junit/stack/parser-test-results.xml":
            stack sdist
            # stack haddock liquidhaskell --flag liquidhaskell:-devel --no-haddock-deps --haddock-arguments="--no-print-missing-docs --odir=$CIRCLE_ARTIFACTS"
            stack haddock liquidhaskell  --no-haddock-deps --haddock-arguments="--no-print-missing-docs"
      - store_test_results:
          path: /tmp/junit/stack
      - store_artifacts:
          path: tests/logs/cur
      - run:
          name: Dist
          command: stack sdist

  cabal_865:
    docker:
      - image: phadej/ghc:8.6.5-bionic-slim
    steps:
      - cabal_build_and_test

  cabal_810:
    docker:
      - image: adinapoli/ghc:8.10.1-slim
    steps:
      - cabal_build_and_test

  cabal_810_plugin:
    docker:
      - image: adinapoli/ghc:8.10.1-slim
    steps:
      - cabal_build_and_test:
          liquid_runner: "--liquid-runner=cabal v2-exec ghc -- --make -i. -package liquidhaskell -package liquid-prelude -fplugin=Language.Haskell.Liquid.GHC.Plugin "

workflows:
  version: 2
  build_stack_and_cabal:
    jobs:
      - stack
      - cabal_865
      - cabal_810
      - cabal_810_plugin
